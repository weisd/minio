{"version":3,"file":"static/js/8642.ab45092c.chunk.js","mappings":"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","sources":["screens/Console/KMS/ListKeys.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport {\n  AddIcon,\n  Button,\n  DataTable,\n  Grid,\n  PageLayout,\n  RefreshIcon,\n  UploadIcon,\n} from \"mds\";\nimport { useNavigate } from \"react-router-dom\";\nimport api from \"../../../common/api\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../common/SecureComponent\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_PAGES,\n  IAM_SCOPES,\n} from \"../../../common/SecureComponent/permissions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { useAppDispatch } from \"../../../store\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../systemSlice\";\nimport withSuspense from \"../Common/Components/withSuspense\";\nimport SearchBox from \"../Common/SearchBox\";\nimport TooltipWrapper from \"../Common/TooltipWrapper/TooltipWrapper\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../HelpMenu\";\n\nconst DeleteKMSModal = withSuspense(\n  React.lazy(() => import(\"./DeleteKMSModal\")),\n);\n\nconst ListKeys = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [filter, setFilter] = useState<string>(\"\");\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [selectedKey, setSelectedKey] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const [records, setRecords] = useState<[]>([]);\n\n  const deleteKey = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.KMS_DELETE_KEY,\n  ]);\n  const createKey = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.KMS_CREATE_KEY,\n  ]);\n\n  const importKey = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.KMS_IMPORT_KEY,\n  ]);\n\n  const displayKeys = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.KMS_LIST_KEYS,\n  ]);\n\n  useEffect(() => {\n    fetchRecords();\n  }, []);\n\n  useEffect(() => {\n    setLoading(true);\n  }, [filter]);\n\n  useEffect(() => {\n    if (loading) {\n      if (displayKeys) {\n        let pattern = filter.trim() === \"\" ? \"*\" : filter.trim();\n        api\n          .invoke(\"GET\", `/api/v1/kms/keys?pattern=${pattern}`)\n          .then((res) => {\n            setLoading(false);\n            setRecords(res.results);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setLoading(false);\n            dispatch(setErrorSnackMessage(err));\n          });\n      } else {\n        setLoading(false);\n      }\n    }\n  }, [loading, setLoading, setRecords, dispatch, displayKeys, filter]);\n\n  const fetchRecords = () => {\n    setLoading(true);\n  };\n\n  const confirmDeleteKey = (key: string) => {\n    setDeleteOpen(true);\n    setSelectedKey(key);\n  };\n\n  const closeDeleteModalAndRefresh = (refresh: boolean) => {\n    setDeleteOpen(false);\n\n    if (refresh) {\n      fetchRecords();\n    }\n  };\n\n  const tableActions: any[] = [];\n  if (deleteKey) {\n    tableActions.push({\n      type: \"delete\",\n      onClick: confirmDeleteKey,\n      sendOnlyId: true,\n      disableButtonFunction: () => !deleteKey,\n    });\n  }\n\n  useEffect(() => {\n    dispatch(setHelpName(\"list_keys\"));\n  }, [dispatch]);\n\n  return (\n    <React.Fragment>\n      {deleteOpen && (\n        <DeleteKMSModal\n          deleteOpen={deleteOpen}\n          selectedItem={selectedKey}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      <PageHeaderWrapper\n        label=\"Key Management Service Keys\"\n        actions={<HelpMenu />}\n      />\n\n      <PageLayout>\n        <Grid container>\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              \"& button\": {\n                marginLeft: \"8px\",\n              },\n            }}\n          >\n            <SecureComponent\n              scopes={[IAM_SCOPES.KMS_LIST_KEYS]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <SearchBox\n                onChange={setFilter}\n                placeholder=\"Search Keys with pattern\"\n                value={filter}\n              />\n            </SecureComponent>\n\n            <SecureComponent\n              scopes={[IAM_SCOPES.KMS_LIST_KEYS]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <TooltipWrapper tooltip={\"Refresh\"}>\n                <Button\n                  id={\"refresh-keys\"}\n                  variant=\"regular\"\n                  icon={<RefreshIcon />}\n                  onClick={() => setLoading(true)}\n                />\n              </TooltipWrapper>\n            </SecureComponent>\n            {importKey ? (\n              <SecureComponent\n                scopes={[IAM_SCOPES.KMS_IMPORT_KEY]}\n                resource={CONSOLE_UI_RESOURCE}\n                errorProps={{ disabled: true }}\n              >\n                <TooltipWrapper tooltip={\"Import Key\"}>\n                  <Button\n                    id={\"import-key\"}\n                    variant={\"regular\"}\n                    icon={<UploadIcon />}\n                    onClick={() => {\n                      navigate(IAM_PAGES.KMS_KEYS_IMPORT);\n                    }}\n                  />\n                </TooltipWrapper>\n              </SecureComponent>\n            ) : null}\n            {createKey ? (\n              <SecureComponent\n                scopes={[IAM_SCOPES.KMS_CREATE_KEY]}\n                resource={CONSOLE_UI_RESOURCE}\n                errorProps={{ disabled: true }}\n              >\n                <TooltipWrapper tooltip={\"Create Key\"}>\n                  <Button\n                    id={\"create-key\"}\n                    label={\"Create Key\"}\n                    variant={\"callAction\"}\n                    icon={<AddIcon />}\n                    onClick={() => navigate(IAM_PAGES.KMS_KEYS_ADD)}\n                  />\n                </TooltipWrapper>\n              </SecureComponent>\n            ) : null}\n          </Grid>\n          <Grid item xs={12} sx={{ marginTop: \"5px\" }}>\n            <SecureComponent\n              scopes={[IAM_SCOPES.KMS_LIST_KEYS]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <DataTable\n                itemActions={tableActions}\n                columns={[\n                  { label: \"Name\", elementKey: \"name\" },\n                  { label: \"Created By\", elementKey: \"createdBy\" },\n                  { label: \"Created At\", elementKey: \"createdAt\" },\n                ]}\n                isLoading={loading}\n                records={records}\n                entityName=\"Keys\"\n                idField=\"name\"\n              />\n            </SecureComponent>\n          </Grid>\n        </Grid>\n      </PageLayout>\n    </React.Fragment>\n  );\n};\n\nexport default ListKeys;\n"],"names":["DeleteKMSModal","withSuspense","React","ListKeys","dispatch","useAppDispatch","navigate","useNavigate","filter","setFilter","useState","deleteOpen","setDeleteOpen","selectedKey","setSelectedKey","loading","setLoading","records","setRecords","deleteKey","hasPermission","CONSOLE_UI_RESOURCE","IAM_SCOPES","KMS_DELETE_KEY","createKey","KMS_CREATE_KEY","importKey","KMS_IMPORT_KEY","displayKeys","KMS_LIST_KEYS","useEffect","fetchRecords","pattern","trim","api","invoke","concat","then","res","results","catch","err","setErrorSnackMessage","confirmDeleteKey","key","tableActions","push","type","onClick","sendOnlyId","disableButtonFunction","setHelpName","_jsxs","children","_jsx","selectedItem","closeDeleteModalAndRefresh","refresh","PageHeaderWrapper","label","actions","HelpMenu","PageLayout","Grid","container","item","xs","sx","display","alignItems","justifyContent","marginLeft","SecureComponent","scopes","resource","errorProps","disabled","SearchBox","onChange","placeholder","value","TooltipWrapper","tooltip","Button","id","variant","icon","RefreshIcon","UploadIcon","IAM_PAGES","KMS_KEYS_IMPORT","AddIcon","KMS_KEYS_ADD","marginTop","DataTable","itemActions","columns","elementKey","isLoading","entityName","idField"],"sourceRoot":""}